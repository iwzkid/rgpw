{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
We call a macro which calls itself to render the full tree.
@see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{{ menus.build_menu(items, attributes, 0) }}

{% macro build_menu(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {%
      set ul_classes = [
        menu_level == 0 ? 'navbar-nav justify-content-end flex-wrap',
        menu_level > 0 ? 'dropdown-menu',
        'nav-level-' ~ menu_level,
      ]
    %}
    <ul{{ attributes.addClass(ul_classes) }}>
    {% for item in items %}
      {{ menus.add_link(item, attributes.removeClass(ul_classes), menu_level) }}
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}

{% macro add_link(item, attributes, menu_level) %}
  {% import _self as menus %}
  {%
    set list_item_classes = [
    'nav-item',
    item.is_expanded ? 'dropdown'
  ]
  %}
  {%
    set link_class = [
      menu_level == 0 ? 'nav-link',
      item.in_active_trail ? 'active',
      menu_level == 0 and (item.is_expanded or item.is_collapsed) ? 'dropdown-toggle',
      menu_level > 0 ? 'dropdown-item',
    ]
  %}
  {%
    set toggle_class = [
    ]
  %}
  <li{{ item.attributes.addClass(list_item_classes) }}>
    {% if menu_level == 0 and item.below %}
      {{ link(item.title, item.url, { 'class': link_class, 'role': 'button', 'data-bs-toggle': 'dropdown', 'aria-expanded': 'false', 'title': ('Expand menu' | t) ~ ' ' ~ item.title }) }}
      {{ menus.build_menu(item.below, attributes, menu_level + 1) }}
    {% else %}
      {{ link(item.title, item.url, { 'class': link_class }) }}
    {% endif %}
  </li>
{% endmacro %}


<nav class="navbar navbar-expand-sm">
  <div class="container-fluid">
    {# <div class="collapse navbar-collapse"> #}
      {% macro build_menu(items, attributes, menu_level) %}
        {% import _self as menus %}
        {% if items %}
          {%
            set ul_classes = [
              menu_level == 0 ? 'navbar-nav justify-content-end flex-wrap',
              menu_level > 0 ? 'dropdown-menu',
              'nav-level-' ~ menu_level,
            ]
          %}
        {# <div id="navbarSupportedContent"> #}
          <ul class="navbar-nav me-auto mb-2 mb-md-0"{{ attributes.addClass(ul_classes) }}>
          {% for item in items %}
            {{ menus.add_link(item, attributes.removeClass(ul_classes), menu_level) }}
          {% endfor %}
          </ul>
        {# </div> #}
        {% endif %}
      {% endmacro %}

      {% macro add_link(item, attributes, menu_level) %}
        {% import _self as menus %}
        {%
          set list_item_classes = [
          'nav-item',
          item.is_expanded ? 'dropdown'
        ]
        %}
        {%
          set link_class = [
            menu_level == 0 ? 'nav-link',
            item.in_active_trail ? 'active',
            menu_level == 0 and (item.is_expanded or item.is_collapsed) ? 'dropdown-toggle',
            menu_level > 0 ? 'dropdown-item',
          ]
        %}
        {%
          set toggle_class = [
          ]
        %}
        <li class="nav-item" {{ item.attributes.addClass(list_item_classes) }}>
          {% if menu_level == 0 and item.below %}
            {{ link(item.title, item.url, { 'class': 'nav-link', 'role': 'button', 'data-bs-toggle': 'dropdown', 'aria-expanded': 'false', 'title': ('Expand menu' | t) ~ ' ' ~ item.title }) }}
            {{ menus.build_menu(item.below, attributes, menu_level + 1) }}
          {% else %}
            {{ link(item.title, item.url, { 'class': 'nav-link' }) }}
          {% endif %}
        </li>
      {% endmacro %}
    {# </div> #}
  </div>
</nav>


<!-- A grey horizontal navbar that becomes vertical on small screens -->
{# <nav class="navbar navbar-expand-sm bg-light"> #}
{# 
  <div class="container-fluid">
    <!-- Links -->
    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link" href="#">Link 1</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Link 2</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Link 3</a>
      </li>
    </ul>
  </div> #}

{# </nav> #}